paths:
 /api/sessions/register:
  post:
   summary: Registra un nuevo usuario.
   tags:
    - Sessions
   requestBody:
    required: true
    content:
     application/json:
      schema:
       $ref: "#/components/schemas/RegisterUser"
      example:
       first_name: "Juan"
       last_name: "Pérez"
       email: "juan@example.com"
       password: "123456"
   responses:
    "201":
     description: Usuario registrado correctamente.
     content:
      application/json:
       schema:
        type: object
        properties:
         message:
          type: string
          example: "Usuario registrado correctamente"
         user:
          $ref: "#/components/schemas/User"
    "400":
     description: Datos inválidos para el registro.
     content:
      application/json:
       schema:
        type: object
        properties:
         message:
          type: string
          example: "El email ya está registrado"
    "500":
     description: Error interno del servidor.

 /api/sessions/login:
  post:
   summary: Inicia sesión un usuario.
   tags:
    - Sessions
   requestBody:
    required: true
    content:
     application/json:
      schema:
       $ref: "#/components/schemas/LoginUser"
      example:
       email: "juan@example.com"
       password: "123456"
   responses:
    "200":
     description: Usuario autenticado correctamente. El JWT se entrega en la cookie 'coderCookie'.
     headers:
      Set-Cookie:
       description: Cookie de autenticación con JWT.
       schema:
        type: string
        example: coderCookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; Path=/; HttpOnly
     content:
      application/json:
       schema:
        type: object
        properties:
         message:
          type: string
          example: "Login exitoso"
         user:
          $ref: "#/components/schemas/User"
    "400":
     description: Credenciales inválidas.
     content:
      application/json:
       schema:
        type: object
        properties:
         message:
          type: string
          example: "Usuario o contraseña incorrectos"
    "500":
     description: Error interno del servidor.

 /api/sessions/current:
  get:
   summary: Obtiene el usuario autenticado actual.
   tags:
    - Sessions
   security:
    - cookieAuth: []
   responses:
    "200":
     description: Usuario actual obtenido correctamente.
     content:
      application/json:
       schema:
        type: object
        properties:
         user:
          $ref: "#/components/schemas/User"
    "401":
     description: No autenticado.
     content:
      application/json:
       schema:
        type: object
        properties:
         message:
          type: string
          example: "No autorizado"
    "500":
     description: Error interno del servidor.

 /api/sessions/unprotectedLogin:
  get:
   summary: Login sin protección (solo para pruebas).
   tags:
    - Sessions
   responses:
    "200":
     description: Login sin protección exitoso.
     content:
      application/json:
       schema:
        type: object
        properties:
         message:
          type: string
          example: "Login sin protección exitoso"
         user:
          $ref: "#/components/schemas/User"
    "500":
     description: Error interno del servidor.

 /api/sessions/unprotectedCurrent:
  get:
   summary: Obtiene el usuario actual sin protección (solo para pruebas).
   tags:
    - Sessions
   responses:
    "200":
     description: Usuario actual obtenido sin protección.
     content:
      application/json:
       schema:
        type: object
        properties:
         user:
          $ref: "#/components/schemas/User"
    "500":
     description: Error interno del servidor.

components:
 securitySchemes:
  cookieAuth:
   type: apiKey
   in: cookie
   name: coderCookie
 schemas:
  RegisterUser:
   type: object
   properties:
    first_name:
     type: string
    last_name:
     type: string
    email:
     type: string
    password:
     type: string
   required:
    - first_name
    - last_name
    - email
    - password
  LoginUser:
   type: object
   properties:
    email:
     type: string
    password:
     type: string
   required:
    - email
    - password
  User:
   type: object
   properties:
    _id:
     type: string
    first_name:
     type: string
    last_name:
     type: string
    email:
     type: string
    role:
     type: string
    last_connection:
     type: string
     format: date-time
   example:
    _id: "64f8c8e2f1d2c3e4f5a6b7c8"
    first_name: "Juan"
    last_name: "Pérez"
    email: "juan@example.com"
    role: "user"
    last_connection: "2024-06-25T12:34:56.789Z"